package com.example.core.designsystem.theme

import androidx.compose.runtime.compositionLocalOf
import androidx.compose.ui.graphics.Color


internal val primaryLight = Color(0xFF000000)
internal val onPrimaryLight = Color(0xFFFFFFFF)
internal val primaryContainerLight = Color(0xFF1B1B1B)
internal val onPrimaryContainerLight = Color(0xFF848484)
internal val secondaryLight = Color(0xFF5E5E5E)
internal val onSecondaryLight = Color(0xFFFFFFFF)
internal val secondaryContainerLight = Color(0xFFE2E2E2)
internal val onSecondaryContainerLight = Color(0xFF646464)
internal val tertiaryLight = Color(0xFF5D5F5F)
internal val onTertiaryLight = Color(0xFFFFFFFF)
internal val tertiaryContainerLight = Color(0xFFFFFFFF)
internal val onTertiaryContainerLight = Color(0xFF747676)
internal val errorLight = Color(0xFFBC0100)
internal val onErrorLight = Color(0xFFFFFFFF)
internal val errorContainerLight = Color(0xFFEB0000)
internal val onErrorContainerLight = Color(0xFFFFFBFF)
internal val backgroundLight = Color(0xFFF7F7F7)
internal val onBackgroundLight = Color(0xFF1B1B1B)
internal val surfaceLight = Color(0xFFFFFFFF)
internal val onSurfaceLight = Color(0xFF1B1B1B)
internal val surfaceVariantLight = Color(0xFFEBE0E1)
internal val onSurfaceVariantLight = Color(0xFF4C4546)
internal val outlineLight = Color(0xFF7E7576)
internal val outlineVariantLight = Color(0xFFCFC4C5)
internal val scrimLight = Color(0xFF000000)
internal val inverseSurfaceLight = Color(0xFF303030)
internal val inverseOnSurfaceLight = Color(0xFFF1F1F1)
internal val inversePrimaryLight = Color(0xFFC6C6C6)
internal val surfaceDimLight = Color(0xFFDADADA)
internal val surfaceBrightLight = Color(0xFFF9F9F9)
internal val surfaceContainerLowestLight = Color(0xFFFFFFFF)
internal val surfaceContainerLowLight = Color(0xFFF3F3F3)
internal val surfaceContainerLight = Color(0xFFEEEEEE)
internal val surfaceContainerHighLight = Color(0xFFE8E8E8)
internal val surfaceContainerHighestLight = Color(0xFFE2E2E2)
internal val successLight = Color(0xFF4CAF50)

internal val primaryDark = Color(0xFFC6C6C6)
internal val onPrimaryDark = Color(0xFF303030)
internal val primaryContainerDark = Color(0xFF000000)
internal val onPrimaryContainerDark = Color(0xFF757575)
internal val secondaryDark = Color(0xFFC6C6C6)
internal val onSecondaryDark = Color(0xFF303030)
internal val secondaryContainerDark = Color(0xFF474747)
internal val onSecondaryContainerDark = Color(0xFFB5B5B5)
internal val tertiaryDark = Color(0xFFFFFFFF)
internal val onTertiaryDark = Color(0xFF2F3131)
internal val tertiaryContainerDark = Color(0xFFE2E2E2)
internal val onTertiaryContainerDark = Color(0xFF636565)
internal val errorDark = Color(0xEBF8634D)
internal val onErrorDark = Color(0xFF690100)
internal val errorContainerDark = Color(0xFFFF5540)
internal val onErrorContainerDark = Color(0xFF360000)
internal val backgroundDark = Color(0xFF131313)
internal val onBackgroundDark = Color(0xFFE2E2E2)
internal val surfaceDark = Color(0xFF222222)
internal val onSurfaceDark = Color(0xFFE2E2E2)
internal val surfaceVariantDark = Color(0xFF4C4546)
internal val onSurfaceVariantDark = Color(0xFFCFC4C5)
internal val outlineDark = Color(0xFF988E90)
internal val outlineVariantDark = Color(0xFF4C4546)
internal val scrimDark = Color(0xFF000000)
internal val inverseSurfaceDark = Color(0xFFFFFFFF)
internal val inverseOnSurfaceDark = Color(0xFF303030)
internal val inversePrimaryDark = Color(0xFF5E5E5E)
internal val surfaceDimDark = Color(0xFF131313)
internal val surfaceBrightDark = Color(0xFF393939)
internal val surfaceContainerLowestDark = Color(0xFF0E0E0E)
internal val surfaceContainerLowDark = Color(0xFF1B1B1B)
internal val surfaceContainerDark = Color(0xFF1F1F1F)
internal val surfaceContainerHighDark = Color(0xFF2A2A2A)
internal val surfaceContainerHighestDark = Color(0xFF353535)

internal val successDark = Color(0xFF4BB24F)
internal val markerColorLight = Color(0xFFF5F5F5)
internal val markerColorDark = Color(0xFF1C1C1C)

internal val colorTransparent = Color(0x00000000)


val LocalColors = compositionLocalOf {
    AdditionalColor()
}

data class AdditionalColor(
    val success: Color = Color.Unspecified,
    val markerColor: Color = Color.Unspecified,
)
